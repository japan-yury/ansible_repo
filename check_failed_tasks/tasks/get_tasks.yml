---
- name: Getting the host time in UTC format
  delegate_to: localhost
  raw: date -u +%Y-%m-%dT%H:%M:%S.%6NZ --date="-60 minutes"
  register: run_minus_hour_from_utc

- name: Setting the time as a fact
  set_fact:
    time_to_use: "{{ run_minus_hour_from_utc.stdout_lines[0] }}"
  when: run_minus_hour_from_utc.stdout_lines[0] is defined

- name: Get AWX Tasks with status 'Failed' and job_explanation not empty
  uri:
    url: "{{ awx_hostname }}/api/v2/jobs?status={{ job_status }}&job_type={{ job_type }}&job_explanation__contains=timeout&finished__gte={{ time_to_use }}"
    method: GET
    headers:
     Content-Type: "application/json"
     Authorization: "Bearer {{ awx_api_token | trim }}"
    force_basic_auth: yes
    body_format: json
    status_code: 200
    validate_certs: no
  delegate_to: localhost
  register: awx_api_output
  until: awx_api_output.status == 200
  retries: 5
  delay: 5
  no_log: "{{ no_log_value }}"

- name: Setting json output as 'fact'
  set_fact:
    awx_output_json: "{{ awx_api_output.json | json_query('results[*]') }}"
  when: 
    - awx_api_output.status == 200
    - awx_api_output.json.results != []
  no_log: "{{ no_log_value }}"

- name: Display all Tasks and the needed fields with status 'failed'
  debug: msg="{{ awx_api_output.json | json_query(jmesquery) }}"
  vars:
    jmesquery: "results[*].{id: id, status: status, started: started, finished: finished, job_explanation: job_explanation, extra_vars: extra_vars, playbook: playbook}"
  register: show_task_id
  when: 
    - awx_api_output.status == 200
    - awx_api_output.json.results != []
  no_log: "{{ no_log_value }}"

- name: Display task details when the 'playbook' name NOT 'name_to_ignore.yml'
  debug: msg="{{ awx_output_json | json_query(jmesquery) }}"
  vars:
    jmesquery: "[?playbook!=`name_to_ignore.yml`].{id: id, playbook: playbook, extra_vars: extra_vars}"
  register: show_data_for_other_playbooks
  when: awx_output_json is defined
  no_log: "{{ no_log_value }}"

- name: Set task details as an array when the 'playbook' name NOT 'name_to_ignore.yml'
  set_fact:
    general_task_id: "{{ item.id }}"
  with_items: "{{ show_data_for_other_playbooks.msg }}"
  when: awx_output_json is defined

- name: Sending FAILED status to API endpoint when task was killed by AWX 'due to timeout'
  uri:
    url: "{{ microservice_service_url }}"
    method: POST
    headers:
      Content-Type: "application/json"
    body:
      jobId: "{{ item.id }}"
      state: "FAILED"
      message: "Job terminated due to timeout by AWX"
    body_format: json
    status_code: 202
    validate_certs: no
  register: api_output
  until: api_output.status == 202
  retries: 5
  delay: 5
  delegate_to: localhost
  ignore_errors: yes
  with_items: "{{ show_data_for_other_playbooks.msg }}"
  when: show_data_for_other_playbooks.msg is defined
  